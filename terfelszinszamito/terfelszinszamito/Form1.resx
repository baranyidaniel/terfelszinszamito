<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Nl9+OaWfegAAAABJRU5ErkJggg==
</value>
  </data>
</root>